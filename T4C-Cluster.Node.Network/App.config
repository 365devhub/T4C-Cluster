<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="akka" type="Akka.Configuration.Hocon.AkkaConfigurationSection, Akka" />
    <section name="Network" type="T4C_Cluster.Node.Network.Configuration.NetworkConfiguration, T4C_Cluster.Node.Network" />
  </configSections>

  <Logging>
    <!-- 0 -->
    <MinimumLevel>Verbose</MinimumLevel>
    <!-- 1 -->
    <!--<MinimumLevel>Debug</MinimumLevel>-->
    <!-- 2 -->
    <!--<MinimumLevel>Information</MinimumLevel>-->
    <!-- 3 -->
    <!--<MinimumLevel>Warning</MinimumLevel>-->
    <!-- 4 -->
    <!--<MinimumLevel>Error</MinimumLevel>-->
    <!-- 5 -->
    <!--<MinimumLevel>Fatal</MinimumLevel>-->

  </Logging>

  <Network>
    <Address>127.0.0.1</Address>
    <Port>11677</Port>
  </Network>
  
  
  <akka>
    <hocon>
      akka {
        Loglevel = INFO
        loggers =["Akka.Logger.Serilog.SerilogLogger, Akka.Logger.Serilog"]
        actor {
          provider = "Akka.Cluster.ClusterActorRefProvider, Akka.Cluster"
        }
        remote {
          log-remote-lifecycle-events = on
          helios.tcp {
            transport-class = "Akka.Remote.Transport.Helios.HeliosTcpTransport, Akka.Remote"
            applied-adapters = []
            transport-protocol = tcp
            hostname = "127.0.0.1"
            port = 7000
          }
        }
        cluster {
          sharding {
            remember-entities = true
            role = "Worker"
            state-store-mode = ddata
            distributed-data.durable.keys = []
          }
          seed-nodes = [
            "akka.tcp://ClusterSystem@127.0.0.1:7000"
          ]
          roles = ["Proxy"]
          pub-sub {
            name = distributedPubSubMediator
            role = ""
            routing-logic = random
            gossip-interval = 1s
            removed-time-to-live = 120s
            max-delta-elements = 3000
            use-dispatcher = ""
          }
        } 
      }
    </hocon>
  </akka>

</configuration>